{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. 	gdb executable\
	gdb run\
2. 	gdb executable\
	gdb run arguments\
3. break \
4. break if cond  expression\
5. step\
6. next\
7. continue\
8. print\
9. watch, display, continue\
10.  info locals\
11. quit\
12. the array has 10 in each length, but if the user inputs a smaller amount in each of the arrays  the program will spit out random characters to fill those slots. Also, the array/pointer does not reset its slots. Which means if I put a 10 char in the first/second string, the second time around if I put something shorter-it will only replace the shorter length. \
13. line 11\
14. add & before input\
15. pass the pointer sum through the first function and change all sums in that function to *sum. In main, for the sum, put in the address (&sum)\
\
collab: kyran, maxime, tyler}